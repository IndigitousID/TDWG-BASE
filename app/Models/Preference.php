<?php

namespace App\Models;

use Validator;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Validation\Rule;

class Preference extends Model
{
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // TRAITS
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // VARIABLES
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    protected $fillable = [
        'user_id',
        'hari',
        'jam',
        'direktori',
        'snooze',
    ];

    protected $hidden = [
        'user_id'
    ];

    protected $casts = [
    ];

    protected $dates = [
        'deleted_at'
    ];

    protected $observables = [
    ];

    public $incrementing = false;
    protected $keyType = 'string';

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // CONFIGURATIONS
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // BOOT
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // CONSTRUCT
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // RELATIONSHIP
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    public function user()
    {
        return $this->belongsTo(User::class);
    }
    
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // STATIC FUNCTION
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // FUNCTION
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    public function getRules()
    {
        $rules                       = [];
        $rules['user_id']            = ['required', 'string', Rule::exists(User::class, 'id')];
        $rules['hari']               = ['required', 'string', 'max:255'];
        $rules['jam']                = ['required', 'string', 'max:255'];
        $rules['direktori']          = ['required', 'string'];
        $rules['snooze']             = ['nullable', 'boolean'];

        return $rules;
    }

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // ACCESSOR
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    public function scopeFilter($q, Array $filters, Bool $isCount = false)
    {
        /*----------  Validate  ----------*/
        $rules = [
            'userid' => ['nullable', 'numeric'],
        ];
        Validator::make($filters, [$rules])->validate();

        /*----------  Query  ----------*/
        foreach ($filters as $field => $val)
        {
            switch (strtolower($field))
            {
                case 'except_ids'       : $q = $q->whereNotIn('id', is_array($val) ? $val                                             : [$val]); break;
                case 'userid'          : $q = $q->userid($val); break;

                case 'orderby': $q                 = $q->orderby($this->getTable() . '.' . (in_array($val, ['jam', 'hari', 'direktori']) ? $val : 'jam'), $filters['orderdesc'] ? 'desc' : 'asc');break;
            }
        }

        return $q;
    }
    
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // MUTATOR
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    // QUERY
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    public function scopeUserId($q, String $v)
    {
        return $q->where('user_id', '=', $v);
    }
}
